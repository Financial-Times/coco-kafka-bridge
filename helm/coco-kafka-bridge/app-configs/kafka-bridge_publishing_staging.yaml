# Default values that will be applied to the prod cluster.
# In delivery we have bridges only to the pub cluster of the prod env

replicaCount: 2

bridges:
## Start staging bridges
# todo remove all bridges once we are 100% live and methode publishes directly to this staging. 
##CMS
- name: cms-kafka-bridge-pub-staging-eu
  kafkaProxyUrl: "https://pub-pre-prod-uk-up.ft.com"
  groupIdPrefix: kafka-bridge-pub-staging-eu
  topic: NativeCmsPublicationEvents
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth
- name: cms-kafka-bridge-pub-staging-us
  kafkaProxyUrl: "https://pub-pre-prod-us-up.ft.com"
  groupIdPrefix: kafka-bridge-pub-staging-us
  topic: NativeCmsPublicationEvents
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth
#CMS metadata
- name: cms-metadata-kafka-bridge-pub-staging-eu
  kafkaProxyUrl: "https://pub-pre-prod-uk-up.ft.com"
  groupIdPrefix: metadata-kafka-bridge-pub-staging-eu
  topic: NativeCmsMetadataPublicationEvents
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth
- name: cms-metadata-kafka-bridge-pub-staging-us
  kafkaProxyUrl: "https://pub-pre-prod-us-up.ft.com"
  groupIdPrefix: metadata-kafka-bridge-pub-staging-us
  topic: NativeCmsMetadataPublicationEvents
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth

# Concepts
- name: concepts-kafka-bridge-pub-pub-staging-eu
  kafkaProxyUrl: "https://pub-pre-prod-uk-up.ft.com"
  groupIdPrefix: concepts-kafka-bridge-pub-staging-eu
  topic: Concept
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth
- name: concepts-kafka-bridge-pub-pub-staging-us
  kafkaProxyUrl: "https://pub-pre-prod-us-up.ft.com"
  groupIdPrefix: concepts-kafka-bridge-pub-staging-us
  topic: Concept
  authSecretName: pub-auth
  authSecretKey: pub-staging-auth

## END staging bridges
